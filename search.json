[{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 UTHSC Arnab Aich Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"analysis time--event data often relies Cox proportional hazards model, uses hazard ratio (HR) primary result. However, HR can difficult interpret, especially core assumption proportional hazards met. alternative, Restricted Mean Survival Time (RMST) gaining favor clarity robust properties (Royston Parmar 2013; Uno et al. 2014). RMST measures average event-free time pre-specified follow-point, L. provides direct meaningful measure treatment benefit (e.g., ‚Äúaverage 3 extra months survival 5 years‚Äù), highly valuable clinicians patients. Modern statistical methods now focus modeling RMST directly function covariates, rather estimating indirectly survival curve. direct approach, based foundational work using Inverse Probability Censoring Weighting (IPCW) (Tian, Zhao, Wei 2014), extended handle complex data structures seen modern trials, including stratification (Wang et al. 2019; Zhang Schaubel 2024) competing risks (Wang Schaubel 2018). However, software tools advanced methods focus analyzing existing data, designing new studies. left trial statisticians write custom code crucial task calculating sample size power. RMSTSS package designed fill gap. provides comprehensive user-friendly suite tools power sample size calculations based latest direct RMST methodologies. package implements several key approaches statistical literature: Direct Linear Models: foundational IPCW-based regression model RMST (Tian, Zhao, Wei 2014). Stratified Models: Efficient methods studies many strata (e.g., clinical centers), including additive (Zhang Schaubel 2024) multiplicative ((Wang et al. 2019)) models. Dependent Censoring Models: handling competing risks, based methods (Wang Schaubel 2018). Flexible Non-Linear Models: Bootstrap-based functions using Generalized Additive Models (GAMs) capture non-linear covariate effects. Analytic vs.¬†Bootstrap Methods: models, package offers choice fast analytical calculation robust, simulation-based boot method. vignette guide theory application function groups.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"core-concepts-of-rmstss-package","dir":"Articles","previous_headings":"","what":"Core Concepts of RMSTSS Package","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"RMSTSS package uses two primary approaches calculations: fast Analytic Method robust Bootstrap Method. functions finding sample size use common search algorithm. Understanding three components key choosing right function needs.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"the-analytic-method--analytical-functions","dir":"Articles","previous_headings":"Core Concepts of RMSTSS Package","what":"The Analytic Method (.analytical functions)","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"analytical functions extremely fast use direct mathematical formula calculate power. makes ideal quickly exploring different scenarios. process : treatment effect size (e.g., difference RMST log-RMST ratio). asymptotic variance effect estimator, measures uncertainty. Œ¶\\Phi cumulative distribution function (CDF) standard normal distribution. Œ≤effect\\beta_{\\text{effect}} treatment effect estimated pilot data. œÉN=œÉ1N\\sigma_N = \\frac{\\sigma_1}{\\sqrt{N}} standard error effect target sample size N, scaled pilot data‚Äôs variance. z1‚àíŒ±/2z_{1-\\alpha/2} critical value standard normal distribution (e.g., 1.96 alpha 0.05).","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"the-bootstrap-method--boot-functions","dir":"Articles","previous_headings":"Core Concepts of RMSTSS Package","what":"The Bootstrap Method (.boot functions)","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"bootstrap functions provide robust, simulation-based alternative makes fewer assumptions data‚Äôs distribution. trade-, much computationally intensive. process : Resample: function simulates ‚Äúfuture trial‚Äù given sample_size resampling replacement pilot_data. Fit Model: new bootstrap sample, performs full analysis (e.g., calculating weights pseudo-observations fitting specified model). Get P-Value: extracts p-value treatment effect fitted model. Repeat: process repeated thousands times (n_sim). Calculate Power: final estimated power proportion simulations p-value less significance level alpha. Power=Number simulations p<Œ±nsim  \\text{Power} = \\frac{\\text{Number simulations } p < \\alpha}{n_{\\text{sim}}}","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"the-sample-size-search-algorithm--ss-functions","dir":"Articles","previous_headings":"Core Concepts of RMSTSS Package","what":"The Sample Size Search Algorithm (.ss functions)","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"functions ending .ss (sample size) use iterative search algorithm find N required achieve target_power: Start: search begins sample size n_start. Calculate Power: calculates power current_n using either analytic formula full bootstrap simulation. calculated_power >= target_power, search succeeds returns current_n. , increments sample size (current_n = current_n + n_step) repeats process. Stopping Rules: search terminates sample size exceeds max_n_per_arm , bootstrap methods, power fails improve set number patience steps.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"avaailable-functions-a-quick-guide","dir":"Articles","previous_headings":"Core Concepts of RMSTSS Package","what":"Avaailable Functions: A Quick Guide","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"package uses consistent naming convention help select correct function. names combinations [Model Type], [Goal - power ss], [Method - analytical boot]. table provides summary available functions model.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"selecting-an-appropriate-model","dir":"Articles","previous_headings":"Core Concepts of RMSTSS Package","what":"Selecting an Appropriate Model","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"Model selection depends assumptions made data structure design study. following table summarizes recommended modeling strategies various analytical scenarios:","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"linear-ipcw-models","dir":"Articles","previous_headings":"","what":"Linear IPCW Models","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"functions implement foundational direct linear regression model RMST. model appropriate linear relationship covariates RMST assumed, censoring independent event interest.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"theory-and-model","dir":"Articles","previous_headings":"Linear IPCW Models","what":"Theory and Model","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"Based methods (Tian, Zhao, Wei 2014), functions model conditional RMST linear function covariates: ùîº[min(Ti,L)|Zi]=Œ≤0+Œ≤1Treatmenti+Œ≤2Covariatei\\mathbb{E}[\\min(T_i, L) | Z_i] = \\beta_0 + \\beta_1 \\text{Treatment}_i + \\beta_2 \\text{Covariate}_{} model, expected RMST pre-specified time L subject modeled linear combination treatment arm variables ZiZ_i. handle right-censoring, method uses Inverse Probability Censoring Weighting (IPCW). achieved following steps: survival curve censoring distribution estimated using Kaplan-Meier method (‚Äúfailure‚Äù censored). subject experienced primary event, weight calculated. weight inverse probability censored event time. standard weighted linear model (lm()) fitted using weights. model includes subjects experienced event.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"analytical-methods","dir":"Articles","previous_headings":"Linear IPCW Models","what":"Analytical Methods","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"analytical functions use formula based asymptotic variance regression coefficients calculate power sample size, making extremely fast. Scenario: use veteran dataset estimate power trial comparing standard vs.¬†test chemotherapy (trt), adjusting Karnofsky performance score (karno).","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"power-calculation---linear-power-analytical","dir":"Articles","previous_headings":"Linear IPCW Models > Analytical Methods","what":"Power Calculation - linear.power.analytical","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"First, lets inspect prepared veteran dataset. Now, calculate power range sample sizes using truncation time 9 months (270 days). results returned data frame ggplot object. Power Analysis Veteran Dataset","code":"trt celltype time status karno diagtime age prior arm 1   1 squamous   72      1    60        7  69     0   0 2   1 squamous  411      1    70        5  64    10   0 3   1 squamous  228      1    60        3  38     0   0 4   1 squamous  126      1    60        9  63    10   0 5   1 squamous  118      1    70       11  65    10   0 6   1 squamous   10      1    20        5  49     0   0 power_results_vet <- linear.power.analytical(   pilot_data = vet,   time_var = \"time\",   status_var = \"status\",   arm_var = \"arm\",   linear_terms = \"karno\",   sample_sizes = c(100, 150, 200, 250),   L = 270 ) --- Estimating parameters from pilot data for analytic calculation... --- --- Calculating asymptotic variance... --- --- Calculating power for specified sample sizes... ---"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"sample-size-calculation---linear-ss-analytical","dir":"Articles","previous_headings":"Linear IPCW Models > Analytical Methods","what":"Sample Size Calculation - linear.ss.analytical","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"can also use analytical method find required sample size achieve target power truncation time one year (365 days). Estimated Effect Pilot Data","code":"ss_results_vet <- linear.ss.analytical(   pilot_data = vet,   time_var = \"time\",   status_var = \"status\",   arm_var = \"arm\",   target_power = 0.40,   linear_terms = \"karno\",   L = 365,   n_start = 1000, n_step = 250, max_n_per_arm = 5000 ) --- Estimating parameters from pilot data for analytic search... --- --- Searching for Sample Size (Method: Analytic) ---   N = 1000/arm, Calculated Power = 0.128   N = 1250/arm, Calculated Power = 0.15   N = 1500/arm, Calculated Power = 0.171   N = 1750/arm, Calculated Power = 0.192   N = 2000/arm, Calculated Power = 0.214   N = 2250/arm, Calculated Power = 0.235   N = 2500/arm, Calculated Power = 0.256   N = 2750/arm, Calculated Power = 0.277   N = 3000/arm, Calculated Power = 0.297   N = 3250/arm, Calculated Power = 0.318   N = 3500/arm, Calculated Power = 0.338   N = 3750/arm, Calculated Power = 0.358   N = 4000/arm, Calculated Power = 0.378   N = 4250/arm, Calculated Power = 0.397   N = 4500/arm, Calculated Power = 0.417  --- Calculation Summary ---   Table: Required Sample Size  | Target_Power| Required_N_per_Arm| |------------:|------------------:| |          0.4|               4500|"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"bootstrap-methods","dir":"Articles","previous_headings":"Linear IPCW Models","what":"Bootstrap Methods","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":".boot suffix function names indicates bootstrap, simulation-based, approach, provides robust, distribution-free alternative. method repeatedly resamples pilot data, fits model sample, calculates power proportion simulations treatment effect significant. computationally intensive, makes fewer assumptions.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"power-and-sample-size-calculation--boot","dir":"Articles","previous_headings":"Linear IPCW Models > Bootstrap Methods","what":"Power and Sample Size Calculation (.boot)","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"call bootstrap functions power linear model. following examples use veteran dataset, smaller number simulations demonstration purposes. practice, larger number simulations (e.g., 1,000 ) recommended ensure stable results. First calculate power range sample sizes. linear.power.boot function takes pilot data returns data frame estimated power sample size.  call bootstrap function sample size calculation. use function linear.ss.boot find sample size needed achieve target power 0.5, truncating 180 days (6 months).","code":"power_boot_vet <- linear.power.boot(   pilot_data = vet,   time_var = \"time\",   status_var = \"status\",   arm_var = \"arm\",   linear_terms = \"karno\",   sample_sizes = c(150, 200, 250),   L = 365,   n_sim = 200  ) --- Calculating Power (Method: Linear RMST with IPCW) --- Simulating for n = 150 per arm... Simulating for n = 200 per arm... Simulating for n = 250 per arm...  --- Simulation Summary ---   Table: Estimated Treatment Effect (RMST Difference)  |Statistic            |      Value| |:--------------------|----------:| |Mean RMST Difference |  -4.087540| |Mean Standard Error  |   9.161558| |95% CI Lower         | -24.764020| |95% CI Upper         |  16.588940| ss_boot_vet <- linear.ss.boot(   pilot_data = vet,   time_var = \"time\",   status_var = \"status\",   arm_var = \"arm\",   target_power = 0.5,   linear_terms = \"karno\",   L = 180,   n_sim = 500,    patience = 5 ) --- Searching for Sample Size (Method: Linear RMST with IPCW) ---  --- Searching for N for 50% Power ---   N = 50/arm, Calculated Power = 0.164   N = 75/arm, Calculated Power = 0.308   N = 100/arm, Calculated Power = 0.316   N = 125/arm, Calculated Power = 0.412   N = 150/arm, Calculated Power = 0.442   N = 175/arm, Calculated Power = 0.51  --- Simulation Summary ---   Table: Estimated Treatment Effect (RMST Difference)  |Statistic            |       Value| |:--------------------|-----------:| |Mean RMST Difference | -12.0138975| |Mean Standard Error  |   5.8496564| |95% CI Lower         | -23.4941297| |95% CI Upper         |  -0.5336652|"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"additive-stratified-models","dir":"Articles","previous_headings":"","what":"Additive Stratified Models","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"multi-center clinical trials, often necessary stratify analysis categorical variable many levels, clinical center discretized biomarker. Estimating separate parameter stratum can inefficient, particularly number strata large. additive stratified model elegantly handles situation conditioning stratum-specific effects.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"theory-and-model-1","dir":"Articles","previous_headings":"Additive Stratified Models","what":"Theory and Model","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"semiparametric additive model RMST, developed (Zhang Schaubel 2024), defined : Œºij=Œº0j+Œ≤‚Ä≤Zi\\mu_{ij} = \\mu_{0j} + \\beta'Z_i model assumes effect covariates ZiZ_i (includes treatment arm) additive constant across strata jj. Crucially, allows stratum unique baseline RMST, denoted Œº0j\\mu_{0j}. estimation common treatment effect, Œ≤\\beta, achieved efficiently stratum-centering approach applied IPCW-weighted data. method avoids direct estimation numerous Œº0j\\mu_{0j} parameters, making computationally efficient even large number strata.","code":""},{"path":[]},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"sample-size-calculation---additive-ss-analytical","dir":"Articles","previous_headings":"Additive Stratified Models > Analytical Methods","what":"Sample Size Calculation - additive.ss.analytical","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"Scenario: use colon dataset design trial stratified extent local disease (extent), factor 4 levels. want find sample size per stratum achieve 80% power. Lets inspect prepared colon dataset. Now, run sample size search 80% power, truncating 5 years (1825 days). Estimated Effect Pilot Data","code":"time status      rx extent arm strata 1  1521      1 Lev+5FU      3   1      3 3  3087      0 Lev+5FU      3   1      3 5   963      1     Obs      2   0      2 7   293      1 Lev+5FU      3   1      3 9   659      1     Obs      3   0      3 11 1767      1 Lev+5FU      3   1      3 ss_results_colon <- additive.ss.analytical(   pilot_data = colon_death,   time_var = \"time\", status_var = \"status\", arm_var = \"arm\", strata_var = \"strata\",   target_power = 0.60,   L = 1825,   n_start = 100, n_step = 100, max_n_per_arm = 10000 ) --- Estimating parameters from pilot data for analytic search... --- --- Searching for Sample Size (Method: Additive Analytic) ---   N = 100/stratum, Calculated Power = 0.069   N = 200/stratum, Calculated Power = 0.099   N = 300/stratum, Calculated Power = 0.128   N = 400/stratum, Calculated Power = 0.157   N = 500/stratum, Calculated Power = 0.186   N = 600/stratum, Calculated Power = 0.214   N = 700/stratum, Calculated Power = 0.243   N = 800/stratum, Calculated Power = 0.271   N = 900/stratum, Calculated Power = 0.299   N = 1000/stratum, Calculated Power = 0.326   N = 1100/stratum, Calculated Power = 0.353   N = 1200/stratum, Calculated Power = 0.379   N = 1300/stratum, Calculated Power = 0.405   N = 1400/stratum, Calculated Power = 0.431   N = 1500/stratum, Calculated Power = 0.455   N = 1600/stratum, Calculated Power = 0.479   N = 1700/stratum, Calculated Power = 0.503   N = 1800/stratum, Calculated Power = 0.526   N = 1900/stratum, Calculated Power = 0.548   N = 2000/stratum, Calculated Power = 0.569   N = 2100/stratum, Calculated Power = 0.59   N = 2200/stratum, Calculated Power = 0.609  --- Calculation Summary ---   Table: Required Sample Size  | Target_Power| Required_N_per_Stratum| |------------:|----------------------:| |          0.6|                   2200|"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"power-calculation---additive-power-analytical","dir":"Articles","previous_headings":"Additive Stratified Models > Analytical Methods","what":"Power Calculation - additive.power.analytical","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"function calculates power given set sample sizes stratified additive model. use colon dataset example. Power Additive Stratified Colon Trial","code":"power_results_colon <- additive.power.analytical(   pilot_data = colon_death,   time_var = \"time\",   status_var = \"status\",   arm_var = \"arm\",   strata_var = \"strata\",   sample_sizes = c(1000, 3000, 5000),   L = 1825 # 5 years ) --- Estimating parameters from pilot data... --- --- Estimating additive effect via stratum-centering... --- --- Calculating asymptotic variance... --- --- Calculating power for specified sample sizes... ---"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"multiplicative-stratified-models","dir":"Articles","previous_headings":"","what":"Multiplicative Stratified Models","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"alternative additive model, multiplicative model may preferred treatment expected relative, proportional, effect RMST‚Äîexample, increasing decreasing survival time certain percentage.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"theory-and-model-2","dir":"Articles","previous_headings":"Multiplicative Stratified Models","what":"Theory and Model","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"multiplicative model, based work (Wang et al. 2019), defined : Œºij=Œº0jexp(Œ≤‚Ä≤Zi)\\mu_{ij} = \\mu_{0j} \\exp(\\beta'Z_i) model, covariates ZiZ_i multiplicative effect baseline stratum-specific RMST, Œº0j\\mu_{0j}. structure equivalent linear model log-RMST. formal estimation Œ≤\\beta requires complex iterative solver, package uses practical computationally efficient approximation. fits weighted log-linear model (lm(log(Y_rmst) ~ ...)) data, provides robust estimates effect size (log-RMST ratio) variance.","code":""},{"path":[]},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"power-calculation---ms-power-analytical","dir":"Articles","previous_headings":"Multiplicative Stratified Models > Analytical Methods","what":"Power Calculation - MS.power.analytical","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"function calculates power various sample sizes using analytical method multiplicative stratified model. Power Multiplicative Stratified Model","code":"power_ms_analytical <- MS.power.analytical(    pilot_data = colon_death,    time_var = \"time\", status_var = \"status\", arm_var = \"arm\", strata_var = \"strata\",    sample_sizes = c(300, 400, 500),    L = 1825 ) --- Estimating parameters from pilot data (log-linear approximation)... --- --- Calculating power for specified sample sizes... ---"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"sample-size-calculation---ms-ss-analytical","dir":"Articles","previous_headings":"Multiplicative Stratified Models > Analytical Methods","what":"Sample Size Calculation - MS.ss.analytical","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"following example demonstrates sample size calculation using model. Sample Size Multiplicative Stratified Model","code":"ms_ss_results_colon <- MS.ss.analytical(    pilot_data = colon_death, time_var = \"time\", status_var = \"status\", arm_var = \"arm\", strata_var = \"strata\",    target_power = 0.6,L = 1825) --- Estimating parameters from pilot data (log-linear approximation)... --- --- Searching for Sample Size (Method: Analytic/Approximation) ---   N = 50/stratum, Calculated Power = 0.124   N = 75/stratum, Calculated Power = 0.165   N = 100/stratum, Calculated Power = 0.206   N = 125/stratum, Calculated Power = 0.247   N = 150/stratum, Calculated Power = 0.287   N = 175/stratum, Calculated Power = 0.326   N = 200/stratum, Calculated Power = 0.364   N = 225/stratum, Calculated Power = 0.402   N = 250/stratum, Calculated Power = 0.438   N = 275/stratum, Calculated Power = 0.473   N = 300/stratum, Calculated Power = 0.506   N = 325/stratum, Calculated Power = 0.538   N = 350/stratum, Calculated Power = 0.569   N = 375/stratum, Calculated Power = 0.598   N = 400/stratum, Calculated Power = 0.626  --- Calculation Summary ---   Table: Required Sample Size  | Target_Power| Required_N_per_Stratum| |------------:|----------------------:| |          0.6|                    400|"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"bootstrap-methods-1","dir":"Articles","previous_headings":"Multiplicative Stratified Models","what":"Bootstrap Methods","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"bootstrap approach provides robust, simulation-based analysis multiplicative model.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"power-calculation---ms-power-boot","dir":"Articles","previous_headings":"Multiplicative Stratified Models > Bootstrap Methods","what":"Power Calculation - MS.power.boot","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"following code demonstrates call MS.power.boot function. Power Multiplicative Stratified Model (Bootstrap)","code":"power_ms_boot <- MS.power.boot(    pilot_data = colon_death,    time_var = \"time\",    status_var = \"status\",    arm_var = \"arm\",    strata_var = \"strata\",    sample_sizes = c(100, 300, 500),    L = 1825,    n_sim = 100,     parallel.cores = 10  ) --- Calculating Power (Method: Multiplicative Stratified RMST Model) --- Simulating for n = 100/stratum... Simulating for n = 300/stratum... Simulating for n = 500/stratum...  --- Simulation Summary ---   Table: Estimated Treatment Effect (RMST Ratio)  |      |Statistic       |    Value| |:-----|:---------------|--------:| |      |Mean RMST Ratio | 1.006522| |2.5%  |95% CI Lower    | 0.967946| |97.5% |95% CI Upper    | 1.057242|"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"sample-size-calculation---ms-ss-boot","dir":"Articles","previous_headings":"Multiplicative Stratified Models > Bootstrap Methods","what":"Sample Size Calculation - MS.ss.boot","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"Similarly, sample size can calculated using bootstrap simulation. Sample Size Multiplicative Stratified Model (Bootstrap)","code":"ss_ms_boot <- MS.ss.boot(    pilot_data = colon_death,    time_var = \"time\",    status_var = \"status\",    arm_var = \"arm\",    strata_var = \"strata\",     target_power = 0.5,    L = 1825,    n_sim = 100,    n_start = 100,    n_step = 50,    patience = 4,    parallel.cores = 10 ) --- Searching for Sample Size (Method: Multiplicative Stratified RMST Model) ---   N = 100/stratum, Calculating Power...  Power = 0.35   N = 150/stratum, Calculating Power...  Power = 0.5  --- Simulation Summary ---   Table: Estimated Treatment Effect (RMST Ratio)  |      |Statistic       |     Value| |:-----|:---------------|---------:| |      |Mean RMST Ratio | 1.0056170| |2.5%  |95% CI Lower    | 0.9233431| |97.5% |95% CI Upper    | 1.1281975|"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"semiparametric-gam-models","dir":"Articles","previous_headings":"","what":"Semiparametric GAM Models","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"covariate expected non-linear effect outcome (example, effect age biomarker), standard linear models may misspecified. Generalized Additive Models (GAMs) provide flexible solution modeling relationships smooth functions.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"theory-and-model-3","dir":"Articles","previous_headings":"Semiparametric GAM Models","what":"Theory and Model","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"functions use bootstrap simulation approach combined GAM. method involves two main steps: Jackknife Pseudo-Observations: time--event outcome first converted jackknife pseudo-observations RMST. technique, explored recent statistical literature RMST estimation (perdry2024?), creates continuous, uncensored variable represents subject‚Äôs contribution RMST. makes outcome suitable use standard regression framework. GAM Fitting: GAM fitted pseudo-observations. model form: ùîº[pseudoi]=Œ≤0+Œ≤1‚ãÖTreatmenti+‚àëk=1qfk(Covariateik)\\mathbb{E}[\\text{pseudo}_i] = \\beta_0 + \\beta_1 \\cdot \\text{Treatment}_i + \\sum_{k=1}^{q} f_k(\\text{Covariate}_{ik}) , fk()f_k() non-linear smooth functions (splines) GAM estimates data.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"power-calculation-formula-gam-power-boot","dir":"Articles","previous_headings":"Semiparametric GAM Models > Theory and Model","what":"Power Calculation Formula (GAM.power.boot)","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"bootstrap method, power calculated direct formula instead estimated empirically simulations: Power=1B‚àëb=1BùïÄ(pb<Œ±)\\text{Power} = \\frac{1}{B} \\sum_{b=1}^{B} \\mathbb{}(p_b < \\alpha) : BB total number bootstrap simulations (n_sim). pbp_b p-value treatment effect bb-th simulation. ùïÄ(‚ãÖ)\\mathbb{}(\\cdot) indicator function, 1 condition true 0 otherwise.","code":""},{"path":[]},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"power-calculation---gam-power-boot","dir":"Articles","previous_headings":"Semiparametric GAM Models > Bootstrap Methods","what":"Power Calculation - GAM.power.boot","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"Scenario: use gbsg (German Breast Cancer Study Group) dataset, suspecting progesterone receptor count (pgr) non-linear effect recurrence-free survival. look prepared gbsg data. following code shows calculate power.","code":"pid age meno size grade nodes pgr er hormon rfstime status arm 1  132  49    0   18     2     2   0  0      0    1838      0   1 2 1575  55    1   20     3    16   0  0      0     403      1   1 3 1140  56    1   40     3     3   0  0      0    1603      0   1 4  769  45    0   25     3     1   0  4      0     177      0   1 5  130  65    1   30     2     5   0 36      1    1855      0   1 6 1642  48    0   52     2    11   0  0      0     842      1   1 power_gam <- GAM.power.boot(    pilot_data = gbsg_prepared,    time_var = \"rfstime\",    status_var = \"status\",    arm_var = \"arm\",    smooth_terms = \"pgr\", # Model pgr with a smooth term    sample_sizes = c(50, 200, 400),    L = 2825, # 5 years    n_sim = 500,    parallel.cores = 10 ) --- Calculating Power (Method: Additive GAM for RMST) --- Simulating for n = 50 /arm ... Simulating for n = 200 /arm ... Simulating for n = 400 /arm ...  --- Simulation Summary ---   Table: Estimated Treatment Effect (RMST Difference)  |Statistic            |     Value| |:--------------------|---------:| |Mean RMST Difference | 859.57386| |Mean Standard Error  |  30.44227| |95% CI Lower         | 796.74021| |95% CI Upper         | 922.40752|  print(power_gam$results_plot)"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"sample-size-calculation---gam-ss-boot","dir":"Articles","previous_headings":"Semiparametric GAM Models > Bootstrap Methods","what":"Sample Size Calculation - GAM.ss.boot","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"Scenario: want find sample size needed achieve 80% power detecting effect pgr recurrence-free survival.","code":"ss_gam <- GAM.ss.boot(    pilot_data = gbsg_prepared,    time_var = \"rfstime\",    status_var = \"status\",    arm_var = \"arm\",    target_power = 0.95,    L = 182,     n_sim = 500,     patience = 5,    parallel.cores = 10 ) --- Searching for Sample Size (Method: Additive GAM for RMST) ---   N = 50/arm, Calculating Power... Power = 1  --- Simulation Summary ---   Table: Estimated Treatment Effect (RMST Difference)  |Statistic            |      Value| |:--------------------|----------:| |Mean RMST Difference | 90.7118904| |Mean Standard Error  |  0.2535895| |95% CI Lower         | 89.7766250| |95% CI Upper         | 91.6471557|"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"dependent-censoring-models","dir":"Articles","previous_headings":"","what":"Dependent Censoring Models","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"studies, particularly observational registry studies, censoring may independent event interest. classic example transplant medicine, receiving organ transplant removes patient risk pre-transplant death. form competing risk, can also viewed dependent censoring.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"theory-and-model-4","dir":"Articles","previous_headings":"Dependent Censoring Models","what":"Theory and Model","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"methods (Wang Schaubel 2018) address extending IPCW framework. Instead single model overall censoring distribution, cause-specific Cox models fitted KK sources censoring (e.g., one model administrative censoring, another competing event). final weight subject product weights derived censoring causes, calculated : Wi=exp(‚àëk=1KŒõÃÇk(Yi))W_i = \\exp\\left(\\sum_{k=1}^{K} \\hat{\\Lambda}_{k}(Y_i)\\right) ŒõÃÇk\\hat{\\Lambda}_{k} estimated cumulative hazard censoring cause k, Yi=min(Ti,L)Y_i = \\min(T_i, L) truncated event time. final analysis weighted linear regression RMST.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"power-calculation-formula-dc-power-analytical","dir":"Articles","previous_headings":"Dependent Censoring Models > Theory and Model","what":"Power Calculation Formula (DC.power.analytical)","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"Power calculated analytically using standard formula: Power=Œ¶(|Œ≤effect|œÉN‚àíz1‚àíŒ±/2)\\text{Power} = \\Phi\\left( \\frac{|\\beta_{\\text{effect}}|}{\\sigma_N} - z_{1-\\alpha/2} \\right) key difference model variance, œÉN2\\sigma_N^2, derived robust sandwich estimator properly accounts multiple weighting components different cause-specific hazard models.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"analytical-methods-3","dir":"Articles","previous_headings":"Dependent Censoring Models","what":"Analytical Methods","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"use mgus2 dataset scenario.","code":"id age sex dxyr  hgb creat mspike ptime pstat time death event_primary 1  1  88   F 1981 13.1   1.3    0.5    30     0   30     1             0 2  2  78   F 1968 11.5   1.2    2.0    25     0   25     1             0 3  3  94   M 1980 10.5   1.5    2.6    46     0   46     1             0 4  4  68   M 1977 15.2   1.2    1.2    92     0   92     1             0 5  5  90   F 1973 10.7   0.8    1.0     8     0    8     1             0 6  6  90   M 1990 12.9   1.0    0.5     4     0    4     1             0   event_dependent arm 1               1   0 2               1   0 3               1   1 4               1   1 5               1   0 6               1   1"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"power-calculation---dc-power-analytical","dir":"Articles","previous_headings":"Dependent Censoring Models > Analytical Methods","what":"Power Calculation - DC.power.analytical","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"function calculates power study dependent censoring (competing risks) given set sample sizes. Power Analysis MGUS Progression Study","code":"dc_power_results <- DC.power.analytical(    pilot_data = mgus_prepared,    time_var = \"time\",    status_var = \"event_primary\",    arm_var = \"arm\",    dep_cens_status_var = \"event_dependent\",    sample_sizes = c(100, 250, 500),    linear_terms = \"age\",    L = 120 # 10 years ) --- Estimating parameters from pilot data... --- --- Calculating asymptotic variance... --- --- Calculating power for specified sample sizes... ---"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"sample-size-calculation---dc-ss-analytical","dir":"Articles","previous_headings":"Dependent Censoring Models > Analytical Methods","what":"Sample Size Calculation - DC.ss.analytical","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"Now, find sample size needed 80% power, truncating 10 years (120 months). Estimated Effect Pilot Data","code":"ss_dc_mgus <- DC.ss.analytical(    pilot_data = mgus_prepared,    time_var = \"time\",    status_var = \"event_primary\",    arm_var = \"arm\",    dep_cens_status_var = \"event_dependent\",    target_power = 0.80,    linear_terms = \"age\",    L = 120, # 10 years    n_start = 100, n_step = 50, max_n_per_arm = 5000 ) --- Estimating parameters from pilot data for analytic calculation... --- --- Searching for Sample Size (Method: Analytic) ---   N = 100/arm, Calculated Power = 0.216   N = 150/arm, Calculated Power = 0.301   N = 200/arm, Calculated Power = 0.383   N = 250/arm, Calculated Power = 0.46   N = 300/arm, Calculated Power = 0.53   N = 350/arm, Calculated Power = 0.595   N = 400/arm, Calculated Power = 0.652   N = 450/arm, Calculated Power = 0.703   N = 500/arm, Calculated Power = 0.748   N = 550/arm, Calculated Power = 0.787   N = 600/arm, Calculated Power = 0.821  --- Calculation Summary ---   Table: Required Sample Size  | Target_Power| Required_N_per_Arm| |------------:|------------------:| |          0.8|                600|"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"interactive-shiny-application","dir":"Articles","previous_headings":"","what":"Interactive Shiny Application","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"users prefer graphical interface, RMSTSS provides interactive Shiny web application offers point--click interface models methods described vignette.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"accessing-the-application","dir":"Articles","previous_headings":"Interactive Shiny Application","what":"Accessing the Application","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"two ways access application: Live Web Version (Recommended): Access application directly browser without installation. Launch Web Application Run Locally R Package: installed RMSTSS-Package, can run application machine following command:","code":"RMSTSS::run_app()"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"app-features","dir":"Articles","previous_headings":"Interactive Shiny Application","what":"App Features","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"Interactive Data Upload: Upload pilot dataset .csv format. Visual Column Mapping: Visually map columns data required variables analysis (e.g., time, status, treatment arm). Full Model Selection: Choose desired RMST model, calculation method (analytical bootstrap), set relevant parameters user-friendly controls. Rich Visualization: Execute analysis view results, including survival plots, power curves, summary tables, within application. Downloadable Reports: Generate download complete, publication-ready analysis report PDF format.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"RMSTSS package provides powerful flexible suite tools designing analyzing clinical trials using Restricted Mean Survival Time.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"advantages-and-disadvantages","dir":"Articles","previous_headings":"Conclusion","what":"Advantages and Disadvantages","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"Advantages: package implements wide range modern statistical methods, allowing users handle complex scenarios like stratification, non-linear effects, competing risks. provision fast analytical methods robust bootstrap methods gives users choice speed distributional flexibility. Disadvantages: primary limitation reliance representative pilot data. accuracy power sample size calculation contingent effect sizes variance structures estimated pilot dataset. Furthermore, bootstrap-based methods can computationally intensive may require access parallel computing resources timely results.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"future-work","dir":"Articles","previous_headings":"Conclusion","what":"Future Work","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"Future development involve extending bootstrap approach dependent censoring models incorporating advanced model diagnostic tools help users assess adequacy chosen model based pilot data.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/articles/RMSTSS.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials","text":"```","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Arnab Aich. Author, maintainer.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aich (2025). RMSTSS: Sample Size Calculation Using RMST Survival Data. R package version 0.1.1, https://biomedical-data-science-internship.github.io/UTHSC-zhang/.","code":"@Manual{,   title = {RMSTSS: Sample Size Calculation Using RMST for Survival Data},   author = {Arnab Aich},   year = {2025},   note = {R package version 0.1.1},   url = {https://biomedical-data-science-internship.github.io/UTHSC-zhang/}, }"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/index.html","id":"rmstss-power-and-sample-size-for-rmst-based-trials","dir":"","previous_headings":"","what":"Sample Size Calculation Using RMST for Survival Data","title":"Sample Size Calculation Using RMST for Survival Data","text":"RMSTSS provides comprehensive suite tools calculating statistical power sample size clinical trials use Restricted Mean Survival Time (RMST) primary endpoint.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Sample Size Calculation Using RMST for Survival Data","text":"analysis time--event data moving beyond proportional hazards assumption, RMST emerged robust clinically intuitive alternative hazard ratio. However, tools designing studies based modern, direct-modeling approaches RMST lacking. RMSTSS fills critical gap implementing variety advanced statistical methods study design, allowing researchers accurately plan trials complex scenarios. detailed usage package described vignette, can accessed using following link Click .","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/index.html","id":"key-features","dir":"","previous_headings":"Overview","what":"Key Features","title":"Sample Size Calculation Using RMST for Survival Data","text":"Linear IPCW Models: Standard direct regression modeling. Additive & Multiplicative Stratified Models: Efficiently handles stratification variables many levels (e.g., clinical centers). Semiparametric GAM Models: Allows flexible, non-linear covariate effects. Dependent Censoring Models: Appropriate settings competing risks. fast analytical approach based asymptotic variance formulas. robust bootstrap (simulation-based) approach enhanced accuracy fewer distributional assumptions. Interactive Application: Includes user-friendly Shiny application point--click analysis.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Sample Size Calculation Using RMST for Survival Data","text":"can install development version RMSTSS GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"https://github.com/UTHSC-Zhang/RMSTSS-package.git\")"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/index.html","id":"quick-example","dir":"","previous_headings":"","what":"Quick Example","title":"Sample Size Calculation Using RMST for Survival Data","text":"basic example calculating statistical power range sample sizes using linear RMST model. calculation based pilot data veteran dataset, adjusting Karnofsky performance score (karno).","code":"library(RMSTSS) library(survival)  # Prepare the veteran dataset for analysis vet <- veteran vet$arm <- ifelse(vet$trt == 1, 0, 1)  # Calculate power for several sample sizes per arm power_results <- linear.power.analytical(   pilot_data = vet,   time_var = \"time\",   status_var = \"status\",   arm_var = \"arm\",   linear_terms = \"karno\",   sample_sizes = c(100, 150, 200, 250),   tau = 270 # Truncation time of 9 months )  # View the results data frame print(power_results$results_data)  # View the power curve plot print(power_results$results_plot)"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/index.html","id":"interactive-shiny-application","dir":"","previous_headings":"","what":"Interactive Shiny Application","title":"Sample Size Calculation Using RMST for Survival Data","text":"users prefer graphical user interface, interactive Shiny application available. app provides point--click interface package‚Äôs functionalities, allowing upload data, map variables, select models, run analyses without writing code. can access application directly web browser following link: Click ","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Sample Size Calculation Using RMST for Survival Data","text":"use RMSTSS research, please cite follows:","code":"Aich, A. (2025). RMSTSS: Sample Size and Power Calculations for RMST-based Clinical Trials. R package version 0.1.0. https://github.com/arnabaich/RMSTSS"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/DC.power.analytical.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Power for RMST Model with Dependent Censoring (Analytic) ‚Äî DC.power.analytical","title":"Analyze Power for RMST Model with Dependent Censoring (Analytic) ‚Äî DC.power.analytical","text":"Performs power analysis RMST model multiple censoring causes using direct formula-based method.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/DC.power.analytical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Power for RMST Model with Dependent Censoring (Analytic) ‚Äî DC.power.analytical","text":"","code":"DC.power.analytical(   pilot_data,   time_var,   status_var,   arm_var,   dep_cens_status_var,   sample_sizes,   linear_terms = NULL,   L,   alpha = 0.05 )"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/DC.power.analytical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Power for RMST Model with Dependent Censoring (Analytic) ‚Äî DC.power.analytical","text":"pilot_data data.frame containing pilot study data. time_var character string time--event variable. status_var character string primary event status (1=event, 0=otherwise). arm_var character string treatment arm variable (1=treatment, 0=control). dep_cens_status_var character string dependent censoring status (1=dependent event, 0=otherwise). sample_sizes numeric vector sample sizes per arm calculate power . linear_terms optional character vector covariate names. L numeric value RMST truncation time. alpha significance level (Type error rate).","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/DC.power.analytical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Power for RMST Model with Dependent Censoring (Analytic) ‚Äî DC.power.analytical","text":"list containing: results_data data.frame sample sizes corresponding powers. results_plot ggplot object visualizing power curve.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/DC.power.analytical.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze Power for RMST Model with Dependent Censoring (Analytic) ‚Äî DC.power.analytical","text":"function calculates power based linear model RMST presence independent dependent censoring (competing risks). method uses cause-specific IPCW account censoring events. Specifically, fits separate Cox proportional hazards model censoring cause estimate cause-specific hazards. final IPCW weight subject calculated combining cumulative hazards censoring causes: $$W_i = \\exp(\\sum_{k=1}^{K} \\hat{\\Lambda}_{k}(Y_i))$$ \\(\\hat{\\Lambda}_{k}\\) estimated cumulative hazard censoring cause k. power derived asymptotic sandwich variance treatment effect resulting weighted linear model. implementation uses robust variance estimator provides good approximation account variability estimating IPCW weights .","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/DC.power.analytical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze Power for RMST Model with Dependent Censoring (Analytic) ‚Äî DC.power.analytical","text":"","code":"# Generate sample pilot data set.seed(123) n_pilot <- 150 pilot_df <- data.frame(   time = rexp(n_pilot, rate = 0.1),   arm = rep(0:1, each = n_pilot / 2),   age = rnorm(n_pilot, mean = 60, sd = 10) ) # Introduce a treatment effect pilot_df$time[pilot_df$arm == 1] <- pilot_df$time[pilot_df$arm == 1] * 1.2  # Create competing event indicators # Assume 70% primary event, 15% dependent censoring, 15% independent censoring event_type <- sample(0:2, n_pilot, replace = TRUE, prob = c(0.7, 0.15, 0.15)) pilot_df$status <- ifelse(event_type == 0, 1, 0) pilot_df$dep_cens_status <- ifelse(event_type == 1, 1, 0) pilot_df$time[event_type != 0] <- pilot_df$time[event_type != 0] * 0.8  # Run the power analysis dc_power_results <- DC.power.analytical(   pilot_data = pilot_df,   time_var = \"time\",   status_var = \"status\",   arm_var = \"arm\",   dep_cens_status_var = \"dep_cens_status\",   sample_sizes = c(200, 300, 400),   linear_terms = \"age\",   L = 20,   alpha = 0.05 ) #> --- Estimating parameters from pilot data... --- #> Model: Y_rmst ~ arm + age #> --- Calculating asymptotic variance... --- #> --- Calculating power for specified sample sizes... --- print(dc_power_results$results_data) #>   N_per_Arm     Power #> 1       200 0.7353163 #> 2       300 0.8870182 #> 3       400 0.9555608 print(dc_power_results$results_plot)"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/DC.ss.analytical.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Sample Size for RMST Model with Dependent Censoring (Analytic) ‚Äî DC.ss.analytical","title":"Find Sample Size for RMST Model with Dependent Censoring (Analytic) ‚Äî DC.ss.analytical","text":"Calculates required sample size target power RMST model dependent censoring.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/DC.ss.analytical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Sample Size for RMST Model with Dependent Censoring (Analytic) ‚Äî DC.ss.analytical","text":"","code":"DC.ss.analytical(   pilot_data,   time_var,   status_var,   arm_var,   dep_cens_status_var,   target_power,   linear_terms = NULL,   L,   alpha = 0.05,   n_start = 50,   n_step = 25,   max_n_per_arm = 2000 )"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/DC.ss.analytical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Sample Size for RMST Model with Dependent Censoring (Analytic) ‚Äî DC.ss.analytical","text":"pilot_data data.frame containing pilot study data. time_var character string time--event variable. status_var character string primary event status (1=event, 0=otherwise). arm_var character string treatment arm variable (1=treatment, 0=control). dep_cens_status_var character string dependent censoring status (1=dependent event, 0=otherwise). target_power single numeric value desired power. linear_terms optional character vector covariate names. L numeric value RMST truncation time. alpha significance level (Type error rate). n_start starting sample size per arm search. n_step increment sample size step search. max_n_per_arm maximum sample size per arm search .","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/DC.ss.analytical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Sample Size for RMST Model with Dependent Censoring (Analytic) ‚Äî DC.ss.analytical","text":"list containing: results_data data.frame target power required sample size. results_plot ggplot object visualizing search path. results_summary data.frame summarizing estimated treatment effect.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/DC.ss.analytical.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Sample Size for RMST Model with Dependent Censoring (Analytic) ‚Äî DC.ss.analytical","text":"function performs iterative search sample size needed achieve specified target_power. uses underlying theory DC.power.analytical. performs one-time estimation treatment effect asymptotic variance pilot data, uses parameters analytic formula efficiently search required sample size.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/DC.ss.analytical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Sample Size for RMST Model with Dependent Censoring (Analytic) ‚Äî DC.ss.analytical","text":"","code":"# Generate sample pilot data with a clear treatment effect set.seed(456) n_pilot <- 200 pilot_df_ss <- data.frame(   time = rexp(n_pilot, rate = 0.2),   arm = rep(0:1, each = n_pilot / 2),   age = rnorm(n_pilot, mean = 55, sd = 8) ) # Introduce a treatment effect pilot_df_ss$time[pilot_df_ss$arm == 1] <- pilot_df_ss$time[pilot_df_ss$arm == 1] * 1.5  # Create competing event indicators event_type <- sample(0:2, n_pilot, replace = TRUE, prob = c(0.6, 0.2, 0.2)) pilot_df_ss$status <- ifelse(event_type == 0, 1, 0) pilot_df_ss$dep_cens_status <- ifelse(event_type == 1, 1, 0) pilot_df_ss$time[event_type != 0] <- pilot_df_ss$time[event_type != 0] * 0.7  # Run the sample size search dc_ss_results <- DC.ss.analytical(   pilot_data = pilot_df_ss,   time_var = \"time\",   status_var = \"status\",   arm_var = \"arm\",   dep_cens_status_var = \"dep_cens_status\",   target_power = 0.80,   linear_terms = \"age\",   L = 15,   alpha = 0.05,   n_start = 100,   n_step = 50 ) #> --- Estimating parameters from pilot data for analytic calculation... --- #> Model: Y_rmst ~ arm + age #> --- Searching for Sample Size (Method: Analytic) --- #>   N = 100/arm, Calculated Power = 0.998 #>  #> --- Calculation Summary --- #>  #>  #> Table: Required Sample Size #>  #> | Target_Power| Required_N_per_Arm| #> |------------:|------------------:| #> |          0.8|                100| print(dc_ss_results$results_data) #>   Target_Power Required_N_per_Arm #> 1          0.8                100 print(dc_ss_results$results_plot) #> `geom_line()`: Each group consists of only one observation. #> ‚Ñπ Do you need to adjust the group aesthetic?"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/GAM.power.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Power for a Semiparametric Additive RMST Model via Simulation ‚Äî GAM.power.boot","title":"Calculate Power for a Semiparametric Additive RMST Model via Simulation ‚Äî GAM.power.boot","text":"Performs power analysis given sample sizes using flexible, semiparametric additive model RMST based pseudo-observations.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/GAM.power.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Power for a Semiparametric Additive RMST Model via Simulation ‚Äî GAM.power.boot","text":"","code":"GAM.power.boot(   pilot_data,   time_var,   status_var,   arm_var,   strata_var = NULL,   sample_sizes,   linear_terms = NULL,   smooth_terms = NULL,   L,   n_sim = 1000,   alpha = 0.05,   parallel.cores = 1 )"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/GAM.power.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Power for a Semiparametric Additive RMST Model via Simulation ‚Äî GAM.power.boot","text":"pilot_data data.frame pilot study data. time_var character string time--event variable. status_var character string event status variable. arm_var character string treatment arm variable. strata_var optional character string stratification variable. sample_sizes numeric vector sample sizes per arm/stratum. linear_terms Optional character vector covariates linear effect. smooth_terms Optional character vector covariates non-linear effect. L numeric truncation time RMST. n_sim Number bootstrap simulations. alpha significance level. parallel.cores Number cores parallel processing.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/GAM.power.boot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Power for a Semiparametric Additive RMST Model via Simulation ‚Äî GAM.power.boot","text":"list containing: results_data data.frame sample sizes corresponding estimated power. results_plot ggplot object visualizing power curve. results_summary data.frame summary estimated treatment effect.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/GAM.power.boot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Power for a Semiparametric Additive RMST Model via Simulation ‚Äî GAM.power.boot","text":"function estimates power via bootstrap simulation. generates n_sim bootstrap samples pilot data (resampling within strata strata_var provided). simulation, performs steps: Calculates jackknife pseudo-observations RMST subject. Fits semiparametric additive model, typically Generalized Additive Model using mgcv::gam, pseudo-observations. model formula can include linear terms, non-linear smooth terms (s()), interactions. Extracts p-value treatment effect model summary. final power proportion simulations p-value less significance level alpha. pseudo-observation approach alternative IPCW direct RMST modeling.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/GAM.power.boot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate Power for a Semiparametric Additive RMST Model via Simulation ‚Äî GAM.power.boot","text":"status_var 1 event, 0 censored. arm_var 1 treatment, 0 control.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/GAM.power.boot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Power for a Semiparametric Additive RMST Model via Simulation ‚Äî GAM.power.boot","text":"","code":"if (FALSE) { # \\dontrun{ pilot_df <- data.frame(   time = rexp(100, 0.08),   status = rbinom(100, 1, 0.7),   arm = rep(0:1, each = 50),   age = rnorm(100, 60, 10) ) # Add a treatment effect pilot_df$time[pilot_df$arm == 1] <- pilot_df$time[pilot_df$arm == 1] * 1.3  power_results <- GAM.power.boot(   pilot_data = pilot_df,   time_var = \"time\",   status_var = \"status\",   arm_var = \"arm\",   sample_sizes = c(100, 150),   linear_terms = \"age\",   L = 15,   n_sim = 100, # Use more sims in practice, e.g., 1000   parallel.cores = 2 ) print(power_results$results_data) print(power_results$results_plot) } # }"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/GAM.ss.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Sample Size for a Semiparametric Additive RMST Model via Simulation ‚Äî GAM.ss.boot","title":"Find Sample Size for a Semiparametric Additive RMST Model via Simulation ‚Äî GAM.ss.boot","text":"Performs iterative sample size search achieve target power using flexible, semiparametric additive model RMST.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/GAM.ss.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Sample Size for a Semiparametric Additive RMST Model via Simulation ‚Äî GAM.ss.boot","text":"","code":"GAM.ss.boot(   pilot_data,   time_var,   status_var,   arm_var,   strata_var = NULL,   target_power,   linear_terms = NULL,   smooth_terms = NULL,   L,   n_sim = 1000,   alpha = 0.05,   parallel.cores = 1,   patience = 5,   n_start = 50,   n_step = 25,   max_n_per_arm = 2000 )"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/GAM.ss.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Sample Size for a Semiparametric Additive RMST Model via Simulation ‚Äî GAM.ss.boot","text":"pilot_data data.frame pilot study data. time_var character string time--event variable. status_var character string event status variable. arm_var character string treatment arm variable. strata_var optional string stratification variable. target_power single numeric value target power. linear_terms Optional character vector covariates linear effect. smooth_terms Optional character vector covariates non-linear effect. L numeric truncation time RMST. n_sim Number bootstrap simulations per search step. alpha significance level. parallel.cores Number cores parallel processing. patience Number consecutive non-improving steps search terminating. n_start starting sample size per arm/stratum search. n_step increment sample size step search. max_n_per_arm maximum sample size per arm/stratum search .","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/GAM.ss.boot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Sample Size for a Semiparametric Additive RMST Model via Simulation ‚Äî GAM.ss.boot","text":"list containing: results_data data.frame target power required sample size. results_plot ggplot object search path. results_summary data.frame summarizing estimated treatment effect.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/GAM.ss.boot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Sample Size for a Semiparametric Additive RMST Model via Simulation ‚Äî GAM.ss.boot","text":"function iteratively searches sample size required achieve target_power. step, runs full bootstrap simulation (described GAM.power.boot) estimate power current sample size. search proceeds target power met stopping criteria satisfied.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/GAM.ss.boot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find Sample Size for a Semiparametric Additive RMST Model via Simulation ‚Äî GAM.ss.boot","text":"function's methodology bootstrap-based.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/GAM.ss.boot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Sample Size for a Semiparametric Additive RMST Model via Simulation ‚Äî GAM.ss.boot","text":"","code":"if (FALSE) { # \\dontrun{ pilot_df_effect <- data.frame(   time = c(stats::rexp(50, 0.1), stats::rexp(50, 0.04)), # Effect   status = stats::rbinom(100, 1, 0.9),   arm = rep(0:1, each = 50) )  ss_results <- GAM.ss.boot(   pilot_data = pilot_df_effect,   time_var = \"time\",   status_var = \"status\",   arm_var = \"arm\",   target_power = 0.80,   L = 15,   n_sim = 100,      # Low n_sim for example   n_start = 100,   n_step = 50,   patience = 2,   parallel.cores = 2 ) print(ss_results$results_data) print(ss_results$results_plot) } # }"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.power.analytical.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Power for a Multiplicative Stratified RMST Model (Analytic) ‚Äî MS.power.analytical","title":"Analyze Power for a Multiplicative Stratified RMST Model (Analytic) ‚Äî MS.power.analytical","text":"Performs power analysis multiplicative, stratified RMST model using analytic method based work Wang et al. (2019).","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.power.analytical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Power for a Multiplicative Stratified RMST Model (Analytic) ‚Äî MS.power.analytical","text":"","code":"MS.power.analytical(   pilot_data,   time_var,   status_var,   arm_var,   strata_var,   sample_sizes,   linear_terms = NULL,   L,   alpha = 0.05 )"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.power.analytical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Power for a Multiplicative Stratified RMST Model (Analytic) ‚Äî MS.power.analytical","text":"pilot_data data.frame pilot study data. time_var character string time--event variable. status_var character string event status variable (1=event, 0=censored). arm_var character string treatment arm variable (1=treatment, 0=control). strata_var character string stratification variable. sample_sizes numeric vector sample sizes per stratum calculate power . linear_terms optional character vector covariate names. L numeric value RMST truncation time. alpha significance level (Type error rate).","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.power.analytical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Power for a Multiplicative Stratified RMST Model (Analytic) ‚Äî MS.power.analytical","text":"list containing: results_data data.frame sample sizes corresponding powers. results_plot ggplot object visualizing power curve.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.power.analytical.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze Power for a Multiplicative Stratified RMST Model (Analytic) ‚Äî MS.power.analytical","text":"function based method evaluating center (stratum) effects using multiplicative model RMST: \\(\\mu_{ij} = \\mu_{0j} \\exp\\{\\beta'Z_i\\}\\). method uses IPCW stratified Cox model censoring distribution. formal estimation \\(\\beta\\) requires iterative solver complex estimating equation (Equation 8 paper). computationally intensive, implementation uses practical approximation fitting weighted log-linear model (lm(log(Y_rmst) ~ ...)), conceptually similar provides robust estimates effect size variance. power calculation relies asymptotic variance log-RMST ratio estimator, \\(\\hat{\\beta}\\). variance derived robust variance-covariance matrix lm fit, serves proxy formal sandwich estimator \\(^{-1}B(^{-1})'\\) described Theorem 1 paper.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.power.analytical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze Power for a Multiplicative Stratified RMST Model (Analytic) ‚Äî MS.power.analytical","text":"","code":"set.seed(123) pilot_df_strat <- data.frame(  time = rexp(120, 0.15),  status = rbinom(120, 1, 0.6),  arm = rep(0:1, each = 60),  region = factor(rep(c(\"A\", \"B\", \"C\"), each = 40)) ) pilot_df_strat$time[pilot_df_strat$arm == 1] <- pilot_df_strat$time[pilot_df_strat$arm == 1] * 1.5  power_results <- MS.power.analytical(  pilot_data = pilot_df_strat,  time_var = \"time\", status_var = \"status\", arm_var = \"arm\", strata_var = \"region\",  sample_sizes = c(50, 75, 100),  L = 10, alpha = 0.05 ) #> --- Estimating parameters from pilot data (log-linear approximation)... --- #> Approximation Model: log(Y_rmst) ~ arm + region #> --- Calculating power for specified sample sizes... --- print(power_results$results_data) #>   N_per_Stratum     Power #> 1            50 0.4415527 #> 2            75 0.6027274 #> 3           100 0.7270471"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.power.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Power for a Multiplicative Stratified RMST Model via Simulation ‚Äî MS.power.boot","title":"Analyze Power for a Multiplicative Stratified RMST Model via Simulation ‚Äî MS.power.boot","text":"Performs power analysis based multiplicative model RMST stratified trials, using bootstrap simulation approach.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.power.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Power for a Multiplicative Stratified RMST Model via Simulation ‚Äî MS.power.boot","text":"","code":"MS.power.boot(   pilot_data,   time_var,   status_var,   arm_var,   strata_var,   sample_sizes,   linear_terms = NULL,   L,   n_sim = 1000,   alpha = 0.05,   parallel.cores = 1 )"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.power.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Power for a Multiplicative Stratified RMST Model via Simulation ‚Äî MS.power.boot","text":"pilot_data data.frame pilot study data. time_var character string time--event variable. status_var character string event status variable. arm_var character string treatment arm variable. strata_var character string stratification variable. sample_sizes numeric vector sample sizes per stratum calculate power . linear_terms Optional character vector covariates model. L numeric truncation time RMST. n_sim Number bootstrap simulations. alpha significance level. parallel.cores Number cores parallel processing.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.power.boot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Power for a Multiplicative Stratified RMST Model via Simulation ‚Äî MS.power.boot","text":"list containing: results_data data.frame sample sizes corresponding powers. results_plot ggplot object visualizing power curve. results_summary data.frame estimated treatment effect (RMST Ratio).","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.power.boot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze Power for a Multiplicative Stratified RMST Model via Simulation ‚Äî MS.power.boot","text":"function estimates power bootstrap simulation, resampling within stratum defined strata_var. n_sim iterations: Jackknife pseudo-observations RMST calculated. log-linear model (stats::lm) fitted log(pseudo_obs). models multiplicative relationship original RMST scale, .e., \\(\\mu_{ij} = \\mu_{0j} \\exp\\{\\beta'Z_i\\}\\). model formula includes stratum-specific intercepts interactions treatment arm. p-value treatment effect extracted model summary. Power determined proportion simulations p-value less alpha.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.power.boot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Analyze Power for a Multiplicative Stratified RMST Model via Simulation ‚Äî MS.power.boot","text":"status_var 1/0. arm_var 1/0. strata_var mandatory argument.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.power.boot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze Power for a Multiplicative Stratified RMST Model via Simulation ‚Äî MS.power.boot","text":"","code":"if (FALSE) { # \\dontrun{ pilot_df_strat <- data.frame(  time = rexp(120, 0.15),  status = rbinom(120, 1, 0.6),  arm = rep(0:1, each = 60),  region = factor(rep(c(\"A\", \"B\", \"C\"), each = 40)) ) pilot_df_strat$time[pilot_df_strat$arm == 1] <- pilot_df_strat$time[pilot_df_strat$arm == 1] * 1.4  power_results <- MS.power.boot(  pilot_data = pilot_df_strat,  time_var = \"time\", status_var = \"status\", arm_var = \"arm\", strata_var = \"region\",  sample_sizes = c(50, 75),  L = 10,  n_sim = 100 # Low n_sim for example ) print(power_results$results_data) } # }"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.ss.analytical.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Sample Size for a Multiplicative Stratified RMST Model (Analytic) ‚Äî MS.ss.analytical","title":"Find Sample Size for a Multiplicative Stratified RMST Model (Analytic) ‚Äî MS.ss.analytical","text":"Calculates required sample size target power using analytic (approximate) method Wang et al. (2019).","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.ss.analytical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Sample Size for a Multiplicative Stratified RMST Model (Analytic) ‚Äî MS.ss.analytical","text":"","code":"MS.ss.analytical(   pilot_data,   time_var,   status_var,   arm_var,   strata_var,   target_power,   linear_terms = NULL,   L,   alpha = 0.05,   n_start = 50,   n_step = 25,   max_n_per_arm = 2000 )"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.ss.analytical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Sample Size for a Multiplicative Stratified RMST Model (Analytic) ‚Äî MS.ss.analytical","text":"pilot_data data.frame containing pilot study data. time_var character string time--event variable. status_var character string event status variable (1=event, 0=censored). arm_var character string treatment arm variable (1=treatment, 0=control). strata_var character string stratification variable. target_power single numeric value desired power. linear_terms optional character vector covariate names. L numeric value RMST truncation time. alpha significance level (Type error rate). n_start starting sample size per stratum search. n_step increment sample size step search. max_n_per_arm maximum sample size per stratum search .","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.ss.analytical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Sample Size for a Multiplicative Stratified RMST Model (Analytic) ‚Äî MS.ss.analytical","text":"list containing: results_data data.frame target power required sample size. results_plot ggplot object visualizing search path. results_summary data.frame summarizing estimated log(RMST Ratio).","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.ss.analytical.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Sample Size for a Multiplicative Stratified RMST Model (Analytic) ‚Äî MS.ss.analytical","text":"function performs iterative search sample size required achieve specified target_power. uses underlying theory log-linear approximation MS.power.analytical. performs one-time estimation log-RMST ratio asymptotic variance pilot data, uses parameters analytic formula efficiently find required sample size.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.ss.analytical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Sample Size for a Multiplicative Stratified RMST Model (Analytic) ‚Äî MS.ss.analytical","text":"","code":"set.seed(456) pilot_df_strat_effect <- data.frame(  time = c(rexp(60, 0.15), rexp(60, 0.08)), # Effect  status = rbinom(120, 1, 0.7),  arm = rep(0:1, each = 60),  region = factor(rep(c(\"A\", \"B\"), each = 60)) )  ss_results <- MS.ss.analytical(  pilot_data = pilot_df_strat_effect,  time_var = \"time\", status_var = \"status\", arm_var = \"arm\", strata_var = \"region\",  target_power = 0.80, L = 10,  n_start = 100, n_step = 50 ) #> --- Estimating parameters from pilot data (log-linear approximation)... --- #> --- Searching for Sample Size (Method: Analytic/Approximation) --- #>   N = 100/stratum, Calculated Power = 1 #>  #> --- Calculation Summary --- #>  #>  #> Table: Required Sample Size #>  #> | Target_Power| Required_N_per_Stratum| #> |------------:|----------------------:| #> |          0.8|                    100| print(ss_results$results_data) #>   Target_Power Required_N_per_Stratum #> 1          0.8                    100"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.ss.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Sample Size for a Multiplicative Stratified RMST Model via Simulation ‚Äî MS.ss.boot","title":"Estimate Sample Size for a Multiplicative Stratified RMST Model via Simulation ‚Äî MS.ss.boot","text":"Performs sample size estimation based multiplicative model RMST stratified trials, using iterative bootstrap simulations.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.ss.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Sample Size for a Multiplicative Stratified RMST Model via Simulation ‚Äî MS.ss.boot","text":"","code":"MS.ss.boot(   pilot_data,   time_var,   status_var,   arm_var,   strata_var,   target_power,   linear_terms = NULL,   L,   n_sim = 1000,   alpha = 0.05,   parallel.cores = 1,   patience = 5,   n_start = 50,   n_step = 25,   max_n_per_arm = 2000 )"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.ss.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Sample Size for a Multiplicative Stratified RMST Model via Simulation ‚Äî MS.ss.boot","text":"pilot_data data.frame pilot study data. time_var character string time--event variable. status_var character string event status variable. arm_var character string treatment arm variable. strata_var character string stratification variable. target_power single numeric value target power (e.g., 0.80). linear_terms Optional vector covariates model. L numeric truncation time RMST. n_sim Number bootstrap simulations per search step. alpha significance level. parallel.cores Number cores parallel processing. patience Number consecutive non-improving steps search terminating. n_start Starting sample size per stratum search. n_step Increment sample size search. max_n_per_arm Maximum sample size per stratum try.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.ss.boot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Sample Size for a Multiplicative Stratified RMST Model via Simulation ‚Äî MS.ss.boot","text":"list containing: results_data data.frame target power required N. results_plot ggplot object showing search path. results_summary data.frame estimated treatment effect.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.ss.boot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate Sample Size for a Multiplicative Stratified RMST Model via Simulation ‚Äî MS.ss.boot","text":"function iteratively searches sample size required achieve target_power. step search, runs full bootstrap simulation (described MS.power.boot) estimate power current sample size. search proceeds target power met stopping criteria satisfied. process can computationally intensive.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.ss.boot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate Sample Size for a Multiplicative Stratified RMST Model via Simulation ‚Äî MS.ss.boot","text":"status_var 1/0. arm_var 1/0. strata_var mandatory argument.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/MS.ss.boot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Sample Size for a Multiplicative Stratified RMST Model via Simulation ‚Äî MS.ss.boot","text":"","code":"if (FALSE) { # \\dontrun{ pilot_df_strat_effect <- data.frame(  time = c(rexp(60, 0.15), rexp(60, 0.08)), # Effect  status = rbinom(120, 1, 0.7),  arm = rep(0:1, each = 60),  region = factor(rep(c(\"A\", \"B\", \"C\"), each = 40)) ) ss_results <- MS.ss.boot(  pilot_data = pilot_df_strat_effect,  time_var = \"time\", status_var = \"status\", arm_var = \"arm\", strata_var = \"region\",  target_power = 0.80, L = 10,  n_sim = 100, # Low n_sim for example  n_start = 100,  n_step = 50, patience = 2 ) print(ss_results$results_data) } # }"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/additive.power.analytical.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Power for a Stratified Additive RMST Model (Analytic) ‚Äî additive.power.analytical","title":"Analyze Power for a Stratified Additive RMST Model (Analytic) ‚Äî additive.power.analytical","text":"Performs power analysis stratified, additive RMST model using analytic variance estimator based method Zhang & Schaubel (2024).","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/additive.power.analytical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Power for a Stratified Additive RMST Model (Analytic) ‚Äî additive.power.analytical","text":"","code":"additive.power.analytical(   pilot_data,   time_var,   status_var,   arm_var,   strata_var,   sample_sizes,   linear_terms = NULL,   L,   alpha = 0.05 )"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/additive.power.analytical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Power for a Stratified Additive RMST Model (Analytic) ‚Äî additive.power.analytical","text":"pilot_data data.frame containing pilot study data. time_var character string time--event variable. status_var character string event status variable (1=event, 0=censored). arm_var character string treatment arm variable (1=treatment, 0=control). strata_var character string stratification variable. sample_sizes numeric vector sample sizes per stratum calculate power . linear_terms optional character vector covariate names. L numeric value RMST truncation time. alpha significance level (Type error rate).","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/additive.power.analytical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Power for a Stratified Additive RMST Model (Analytic) ‚Äî additive.power.analytical","text":"list containing: results_data data.frame specified sample sizes corresponding powers. results_plot ggplot object visualizing power curve.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/additive.power.analytical.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze Power for a Stratified Additive RMST Model (Analytic) ‚Äî additive.power.analytical","text":"function implements power calculation semiparametric additive model RMST, given \\(\\mu_{ij} = \\mu_{0j} + \\beta'Z_i\\), subject j stratum. method uses Inverse Probability Censoring Weighting (IPCW), weights derived stratified Cox model censoring times. regression coefficient \\(\\hat{\\beta}\\) estimated using closed-form solution involves centering covariates RMST values within stratum. Power determined analytically asymptotic sandwich variance \\(\\hat{\\beta}\\). implementation uses robust variance estimator form \\(A_n^{-1} B_n (A_n^{-1})'\\), \\(A_n\\) \\(B_n\\) empirical estimates variance components.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/additive.power.analytical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze Power for a Stratified Additive RMST Model (Analytic) ‚Äî additive.power.analytical","text":"","code":"set.seed(123) pilot_df_strat <- data.frame(  time = rexp(150, 0.1),  status = rbinom(150, 1, 0.8),  arm = rep(0:1, each = 75),  region = factor(rep(c(\"A\", \"B\", \"C\"), each = 50)),  age = rnorm(150, 60, 10) ) # Introduce an additive treatment effect pilot_df_strat$time[pilot_df_strat$arm == 1] <-   pilot_df_strat$time[pilot_df_strat$arm == 1] + 1.5  power_results <- additive.power.analytical(   pilot_data = pilot_df_strat,   time_var = \"time\", status_var = \"status\", arm_var = \"arm\", strata_var = \"region\",   sample_sizes = c(100, 150, 200),   linear_terms = \"age\",   L = 12 ) #> --- Estimating parameters from pilot data... --- #> --- Estimating additive effect via stratum-centering... --- #> --- Calculating asymptotic variance... --- #> --- Calculating power for specified sample sizes... --- print(power_results$results_data) #>   N_per_Stratum     Power #> 1           100 0.2629389 #> 2           150 0.3682932 #> 3           200 0.4660482 print(power_results$results_plot)"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/additive.ss.analytical.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Sample Size for a Stratified Additive RMST Model (Analytic) ‚Äî additive.ss.analytical","title":"Find Sample Size for a Stratified Additive RMST Model (Analytic) ‚Äî additive.ss.analytical","text":"Calculates required sample size target power using analytic method stratified, additive RMST model.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/additive.ss.analytical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Sample Size for a Stratified Additive RMST Model (Analytic) ‚Äî additive.ss.analytical","text":"","code":"additive.ss.analytical(   pilot_data,   time_var,   status_var,   arm_var,   strata_var,   target_power,   linear_terms = NULL,   L,   alpha = 0.05,   n_start = 50,   n_step = 25,   max_n_per_arm = 2000 )"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/additive.ss.analytical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Sample Size for a Stratified Additive RMST Model (Analytic) ‚Äî additive.ss.analytical","text":"pilot_data data.frame containing pilot study data. time_var character string time--event variable. status_var character string event status variable (1=event, 0=censored). arm_var character string treatment arm variable (1=treatment, 0=control). strata_var character string stratification variable. target_power single numeric value desired power. linear_terms optional character vector covariate names. L numeric value RMST truncation time. alpha significance level (Type error rate). n_start starting sample size per stratum search. n_step increment sample size step search. max_n_per_arm maximum sample size per stratum search .","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/additive.ss.analytical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Sample Size for a Stratified Additive RMST Model (Analytic) ‚Äî additive.ss.analytical","text":"list containing: results_data data.frame target power required sample size. results_plot ggplot object visualizing search path. results_summary data.frame summarizing estimated treatment effect.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/additive.ss.analytical.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Sample Size for a Stratified Additive RMST Model (Analytic) ‚Äî additive.ss.analytical","text":"function performs iterative search sample size required achieve specified target_power. uses underlying theory additive.power.analytical, based stratum-centering covariates. performs one-time estimation additive treatment effect asymptotic variance pilot data, uses parameters analytic formula efficiently find required sample size.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/additive.ss.analytical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Sample Size for a Stratified Additive RMST Model (Analytic) ‚Äî additive.ss.analytical","text":"","code":"set.seed(123) pilot_df_strat <- data.frame(  time = rexp(150, 0.1),  status = rbinom(150, 1, 0.8),  arm = rep(0:1, each = 75),  region = factor(rep(c(\"A\", \"B\", \"C\"), each = 50)),  age = rnorm(150, 60, 10) ) # Introduce an additive treatment effect pilot_df_strat$time[pilot_df_strat$arm == 1] <-   pilot_df_strat$time[pilot_df_strat$arm == 1] + 1.5    # Find the required sample size per stratum for 80% power   ss_results <- additive.ss.analytical(     pilot_data = pilot_df_strat,     time_var = \"time\", status_var = \"status\",     arm_var = \"arm\", strata_var = \"region\",     target_power = 0.50,     L = 18, #     n_start = 200,     n_step = 50,     max_n_per_arm = 1000   ) #> --- Estimating parameters from pilot data for analytic search... --- #> --- Searching for Sample Size (Method: Additive Analytic) --- #>   N = 200/stratum, Calculated Power = 0.399 #>   N = 250/stratum, Calculated Power = 0.478 #>   N = 300/stratum, Calculated Power = 0.55 #>  #> --- Calculation Summary --- #>  #>  #> Table: Required Sample Size #>  #> | Target_Power| Required_N_per_Stratum| #> |------------:|----------------------:| #> |          0.5|                    300|   print(ss_results$results_data) #>   Target_Power Required_N_per_Stratum #> 1          0.5                    300   print(ss_results$results_plot)"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/dot-get_internal_simulation_runner.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal Factory for RMST Simulation Functions (Bootstrap) ‚Äî .get_internal_simulation_runner","title":"Internal Factory for RMST Simulation Functions (Bootstrap) ‚Äî .get_internal_simulation_runner","text":"non-exported helper function sets returns another function responsible running core bootstrap simulation logic. factory pattern helps reduce code duplication public-facing power sample size functions. prepares model formula pilot data returns run_power_sim function called repeatedly.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/dot-get_internal_simulation_runner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal Factory for RMST Simulation Functions (Bootstrap) ‚Äî .get_internal_simulation_runner","text":"","code":".get_internal_simulation_runner(   pilot_data,   time_var,   status_var,   arm_var,   strata_var,   linear_terms,   L,   alpha,   n_sim,   parallel.cores = 10 )"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/dot-get_internal_simulation_runner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal Factory for RMST Simulation Functions (Bootstrap) ‚Äî .get_internal_simulation_runner","text":"function takes n_per_stratum runs simulation.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.power.analytical.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Power for a Linear RMST Model (Analytic) ‚Äî linear.power.analytical","title":"Analyze Power for a Linear RMST Model (Analytic) ‚Äî linear.power.analytical","text":"Performs power analysis using direct formula based asymptotic variance estimator linear RMST model.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.power.analytical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Power for a Linear RMST Model (Analytic) ‚Äî linear.power.analytical","text":"","code":"linear.power.analytical(   pilot_data,   time_var,   status_var,   arm_var,   sample_sizes,   linear_terms = NULL,   L,   alpha = 0.05 )"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.power.analytical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Power for a Linear RMST Model (Analytic) ‚Äî linear.power.analytical","text":"pilot_data data.frame containing pilot study data. time_var character string specifying name time--event variable. status_var character string specifying name event status variable (1=event, 0=censored). arm_var character string specifying name treatment arm variable (1=treatment, 0=control). sample_sizes numeric vector sample sizes per arm calculate power . linear_terms optional character vector covariate names include model. L numeric value RMST truncation time. alpha significance level power calculation (Type error rate).","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.power.analytical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Power for a Linear RMST Model (Analytic) ‚Äî linear.power.analytical","text":"list containing: results_data data.frame specified sample sizes corresponding calculated power. results_plot ggplot object visualizing power curve. results_summary data.frame summarizing treatment effect pilot data used calculation.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.power.analytical.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze Power for a Linear RMST Model (Analytic) ‚Äî linear.power.analytical","text":"function implements analytic power calculation direct linear regression model Restricted Mean Survival Time (RMST) proposed Tian et al. (2014). core method weighted linear model form $$E[Y_i|Z_i] = \\beta_0 + \\beta_1 Z_i$$ \\(Y_i = \\min(T_i, \\L)\\) event time truncated \\(\\L\\). handle right-censoring, method uses Inverse Probability Censoring Weighting (IPCW). weight uncensored individual inverse probability remaining uncensored event time, \\(w_i = \\delta_i / \\hat{G}(Y_i)\\), \\(\\hat{G}(t) = P(C > t)\\) Kaplan-Meier estimate censoring distribution. Power calculated analytically based asymptotic properties coefficient estimators. variance treatment effect estimator, \\(\\hat{\\beta}\\), derived robust sandwich variance estimator form \\(^{-1}B(^{-1})'\\). implementation, scaled information matrix \\((X'WX)/n\\), B empirical second moment influence functions, \\((\\sum \\epsilon_i \\epsilon_i')/n\\), \\(\\epsilon_i\\) influence curve observation . resulting variance used calculate standard error given sample size, turn used power formula.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.power.analytical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze Power for a Linear RMST Model (Analytic) ‚Äî linear.power.analytical","text":"","code":"pilot_df <- data.frame(   time = rexp(100, 0.1),   status = rbinom(100, 1, 0.7),   arm = rep(0:1, each = 50),   age = rnorm(100, 55, 10) ) power_results <- linear.power.analytical(   pilot_data = pilot_df,   time_var = \"time\",   status_var = \"status\",   arm_var = \"arm\",   linear_terms = \"age\",   sample_sizes = c(100, 200, 300),   L = 10 ) #> --- Estimating parameters from pilot data for analytic calculation... --- #> Model: Y_rmst ~ factor(arm) + age #> --- Calculating asymptotic variance... --- #> --- Calculating power for specified sample sizes... --- print(power_results$results_data) #>   N_per_Arm      Power #> 1       100 0.03750270 #> 2       200 0.04399785 #> 3       300 0.04957338 print(power_results$results_plot)"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.power.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Power for a Linear RMST Model via Simulation ‚Äî linear.power.boot","title":"Analyze Power for a Linear RMST Model via Simulation ‚Äî linear.power.boot","text":"Performs power analysis given sample sizes based direct linear regression model RMST, using bootstrap simulation approach.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.power.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Power for a Linear RMST Model via Simulation ‚Äî linear.power.boot","text":"","code":"linear.power.boot(   pilot_data,   time_var,   status_var,   arm_var,   sample_sizes,   linear_terms = NULL,   L,   n_sim = 1000,   alpha = 0.05 )"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.power.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Power for a Linear RMST Model via Simulation ‚Äî linear.power.boot","text":"pilot_data data.frame pilot study data. time_var character string time--event variable. status_var character string event status variable. arm_var character string treatment arm variable. sample_sizes numeric vector sample sizes per arm calculate power . linear_terms Optional character vector covariates linear model. L numeric truncation time RMST. n_sim number bootstrap simulations run sample size. alpha significance level (Type error rate).","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.power.boot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Power for a Linear RMST Model via Simulation ‚Äî linear.power.boot","text":"list containing: results_data data.frame sample sizes corresponding estimated power. results_plot ggplot object visualizing power curve. results_summary data.frame summary statistics estimated treatment effect largest sample size simulation.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.power.boot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze Power for a Linear RMST Model via Simulation ‚Äî linear.power.boot","text":"function estimates power generating number bootstrap samples (n_sim) provided pilot data resampling replacement. bootstrap sample, performs following steps: Estimates censoring distribution using Kaplan-Meier method (survival::survfit). Calculates Inverse Probability Censoring Weights (IPCW) observation. Fits weighted linear model (stats::lm) RMST uncensored subjects. Extracts p-value treatment arm_var coefficient. final power given sample size proportion n_sim simulations p-value less significance level alpha. simulation-based approach robust can computationally intensive.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.power.boot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Analyze Power for a Linear RMST Model via Simulation ‚Äî linear.power.boot","text":"status_var 1 event, 0 censored. arm_var 1 treatment, 0 control.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.power.boot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze Power for a Linear RMST Model via Simulation ‚Äî linear.power.boot","text":"","code":"if (FALSE) { # \\dontrun{ pilot_df <- data.frame(   time = rexp(100, 0.1),   status = rbinom(100, 1, 0.7),   arm = rep(0:1, each = 50),   age = rnorm(100, 60, 8) ) # Introduce a treatment effect for a more interesting example pilot_df$time[pilot_df$arm == 1] <- pilot_df$time[pilot_df$arm == 1] * 1.5  power_results <- linear.power.boot(   pilot_data = pilot_df,   time_var = \"time\",   status_var = \"status\",   arm_var = \"arm\",   linear_terms = \"age\",   sample_sizes = c(100, 150, 200),   L = 10,   n_sim = 200 # Use more simulations in practice (e.g., 1000) ) print(power_results$results_data) print(power_results$results_plot) } # }"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.ss.analytical.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Sample Size for a Linear RMST Model (Analytic) ‚Äî linear.ss.analytical","title":"Find Sample Size for a Linear RMST Model (Analytic) ‚Äî linear.ss.analytical","text":"Calculates required sample size target power using analytic formula based methods Tian et al. (2014).","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.ss.analytical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Sample Size for a Linear RMST Model (Analytic) ‚Äî linear.ss.analytical","text":"","code":"linear.ss.analytical(   pilot_data,   time_var,   status_var,   arm_var,   target_power,   linear_terms = NULL,   L,   alpha = 0.05,   n_start = 50,   n_step = 25,   max_n_per_arm = 2000 )"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.ss.analytical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Sample Size for a Linear RMST Model (Analytic) ‚Äî linear.ss.analytical","text":"pilot_data data.frame containing pilot study data. time_var character string specifying name time--event variable. status_var character string specifying name event status variable (1=event, 0=censored). arm_var character string specifying name treatment arm variable (1=treatment, 0=control). target_power single numeric value desired power (e.g., 0.80 0.90). linear_terms optional character vector covariate names include model. L numeric value RMST truncation time. alpha significance level (Type error rate). n_start starting sample size per arm search. n_step increment sample size step search. max_n_per_arm maximum sample size per arm search .","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.ss.analytical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Sample Size for a Linear RMST Model (Analytic) ‚Äî linear.ss.analytical","text":"list containing: results_data data.frame target power required sample size per arm. results_plot ggplot object visualizing sample size search path. results_summary data.frame summarizing treatment effect pilot data used calculation.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.ss.analytical.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Sample Size for a Linear RMST Model (Analytic) ‚Äî linear.ss.analytical","text":"function performs iterative search find sample size needed achieve specified target_power. uses underlying theory linear.power.analytical. First, estimates treatment effect size asymptotic variance pilot data. , iteratively calculates power increasing sample sizes using analytic formula target power achieved.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.ss.analytical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Sample Size for a Linear RMST Model (Analytic) ‚Äî linear.ss.analytical","text":"","code":"pilot_df <- data.frame(   time = c(rexp(50, 0.1), rexp(50, 0.07)), # Introduce an effect   status = rbinom(100, 1, 0.8),   arm = rep(0:1, each = 50),   age = rnorm(100, 55, 10) ) ss_results <- linear.ss.analytical(   pilot_data = pilot_df,   time_var = \"time\",   status_var = \"status\",   arm_var = \"arm\",   target_power = 0.80,   L = 10 ) #> --- Estimating parameters from pilot data for analytic search... --- #> Model: Y_rmst ~ factor(arm) #> --- Searching for Sample Size (Method: Analytic) --- #>   N = 50/arm, Calculated Power = 0.034 #>   N = 75/arm, Calculated Power = 0.037 #>   N = 100/arm, Calculated Power = 0.039 #>   N = 125/arm, Calculated Power = 0.041 #>   N = 150/arm, Calculated Power = 0.043 #>   N = 175/arm, Calculated Power = 0.044 #>   N = 200/arm, Calculated Power = 0.046 #>   N = 225/arm, Calculated Power = 0.048 #>   N = 250/arm, Calculated Power = 0.049 #>   N = 275/arm, Calculated Power = 0.051 #>   N = 300/arm, Calculated Power = 0.052 #>   N = 325/arm, Calculated Power = 0.054 #>   N = 350/arm, Calculated Power = 0.055 #>   N = 375/arm, Calculated Power = 0.057 #>   N = 400/arm, Calculated Power = 0.058 #>   N = 425/arm, Calculated Power = 0.059 #>   N = 450/arm, Calculated Power = 0.061 #>   N = 475/arm, Calculated Power = 0.062 #>   N = 500/arm, Calculated Power = 0.064 #>   N = 525/arm, Calculated Power = 0.065 #>   N = 550/arm, Calculated Power = 0.066 #>   N = 575/arm, Calculated Power = 0.068 #>   N = 600/arm, Calculated Power = 0.069 #>   N = 625/arm, Calculated Power = 0.07 #>   N = 650/arm, Calculated Power = 0.071 #>   N = 675/arm, Calculated Power = 0.073 #>   N = 700/arm, Calculated Power = 0.074 #>   N = 725/arm, Calculated Power = 0.075 #>   N = 750/arm, Calculated Power = 0.077 #>   N = 775/arm, Calculated Power = 0.078 #>   N = 800/arm, Calculated Power = 0.079 #>   N = 825/arm, Calculated Power = 0.08 #>   N = 850/arm, Calculated Power = 0.082 #>   N = 875/arm, Calculated Power = 0.083 #>   N = 900/arm, Calculated Power = 0.084 #>   N = 925/arm, Calculated Power = 0.085 #>   N = 950/arm, Calculated Power = 0.087 #>   N = 975/arm, Calculated Power = 0.088 #>   N = 1000/arm, Calculated Power = 0.089 #>   N = 1025/arm, Calculated Power = 0.09 #>   N = 1050/arm, Calculated Power = 0.092 #>   N = 1075/arm, Calculated Power = 0.093 #>   N = 1100/arm, Calculated Power = 0.094 #>   N = 1125/arm, Calculated Power = 0.095 #>   N = 1150/arm, Calculated Power = 0.096 #>   N = 1175/arm, Calculated Power = 0.098 #>   N = 1200/arm, Calculated Power = 0.099 #>   N = 1225/arm, Calculated Power = 0.1 #>   N = 1250/arm, Calculated Power = 0.101 #>   N = 1275/arm, Calculated Power = 0.103 #>   N = 1300/arm, Calculated Power = 0.104 #>   N = 1325/arm, Calculated Power = 0.105 #>   N = 1350/arm, Calculated Power = 0.106 #>   N = 1375/arm, Calculated Power = 0.107 #>   N = 1400/arm, Calculated Power = 0.109 #>   N = 1425/arm, Calculated Power = 0.11 #>   N = 1450/arm, Calculated Power = 0.111 #>   N = 1475/arm, Calculated Power = 0.112 #>   N = 1500/arm, Calculated Power = 0.113 #>   N = 1525/arm, Calculated Power = 0.115 #>   N = 1550/arm, Calculated Power = 0.116 #>   N = 1575/arm, Calculated Power = 0.117 #>   N = 1600/arm, Calculated Power = 0.118 #>   N = 1625/arm, Calculated Power = 0.119 #>   N = 1650/arm, Calculated Power = 0.121 #>   N = 1675/arm, Calculated Power = 0.122 #>   N = 1700/arm, Calculated Power = 0.123 #>   N = 1725/arm, Calculated Power = 0.124 #>   N = 1750/arm, Calculated Power = 0.125 #>   N = 1775/arm, Calculated Power = 0.127 #>   N = 1800/arm, Calculated Power = 0.128 #>   N = 1825/arm, Calculated Power = 0.129 #>   N = 1850/arm, Calculated Power = 0.13 #>   N = 1875/arm, Calculated Power = 0.131 #>   N = 1900/arm, Calculated Power = 0.133 #>   N = 1925/arm, Calculated Power = 0.134 #>   N = 1950/arm, Calculated Power = 0.135 #>   N = 1975/arm, Calculated Power = 0.136 #>   N = 2000/arm, Calculated Power = 0.137 #> Warning: Target power 0.8 not achieved by max N of 2000 #>  #> --- Calculation Summary --- #>  #>  #> Table: Required Sample Size #>  #> | Target_Power| Required_N_per_Arm| #> |------------:|------------------:| #> |          0.8|               2000| print(ss_results$results_data) #>   Target_Power Required_N_per_Arm #> 1          0.8               2000 print(ss_results$results_plot)"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.ss.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Sample Size for a Linear RMST Model via Simulation ‚Äî linear.ss.boot","title":"Find Sample Size for a Linear RMST Model via Simulation ‚Äî linear.ss.boot","text":"Performs iterative sample size search achieve target power based direct linear regression model RMST, using bootstrap simulation.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.ss.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Sample Size for a Linear RMST Model via Simulation ‚Äî linear.ss.boot","text":"","code":"linear.ss.boot(   pilot_data,   time_var,   status_var,   arm_var,   target_power,   linear_terms = NULL,   L,   n_sim = 1000,   alpha = 0.05,   patience = 5,   n_start = 50,   n_step = 25,   max_n_per_arm = 2000 )"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.ss.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Sample Size for a Linear RMST Model via Simulation ‚Äî linear.ss.boot","text":"pilot_data data.frame pilot study data. time_var character string time--event variable. status_var character string event status variable. arm_var character string treatment arm variable. target_power single numeric value target power (e.g., 0.80). linear_terms Optional character vector covariates linear model. L numeric truncation time RMST. n_sim number bootstrap simulations per search step. alpha significance level. patience number consecutive non-improving steps search terminating. n_start starting sample size per arm search. n_step increment sample size step search. max_n_per_arm maximum sample size per arm search .","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.ss.boot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Sample Size for a Linear RMST Model via Simulation ‚Äî linear.ss.boot","text":"list containing: results_data data.frame target power final required sample size per arm. results_plot ggplot object showing search path. results_summary data.frame summary statistics estimated treatment effect final simulation.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.ss.boot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Sample Size for a Linear RMST Model via Simulation ‚Äî linear.ss.boot","text":"function iteratively searches required sample size achieve specified target_power. step search, runs full bootstrap simulation (n_sim iterations), described linear.power.boot, estimate power current sample size. search stops target power achieved stopping criteria (e.g., patience) met. Due nested simulation structure, function can time-consuming.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.ss.boot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find Sample Size for a Linear RMST Model via Simulation ‚Äî linear.ss.boot","text":"status_var 1 event, 0 censored. arm_var 1 treatment, 0 control.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/linear.ss.boot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Sample Size for a Linear RMST Model via Simulation ‚Äî linear.ss.boot","text":"","code":"if (FALSE) { # \\dontrun{ pilot_df_effect <- data.frame(   time = c(rexp(50, 0.1), rexp(50, 0.05)), # Effect present   status = rbinom(100, 1, 0.8),   arm = rep(0:1, each = 50) ) ss_results <- linear.ss.boot(   pilot_data = pilot_df_effect,   time_var = \"time\",   status_var = \"status\",   arm_var = \"arm\",   target_power = 0.80,   L = 10,   n_sim = 200, # Low n_sim for example   patience = 2,   n_start = 100,   n_step = 50,   max_n_per_arm = 500 ) print(ss_results$results_data) print(ss_results$results_plot) } # }"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the RMSTdesign Shiny Application ‚Äî run_app","title":"Launch the RMSTdesign Shiny Application ‚Äî run_app","text":"function easily launch interactive Shiny application bundled package.","code":""},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the RMSTdesign Shiny Application ‚Äî run_app","text":"","code":"run_app()"},{"path":"https://biomedical-data-science-internship.github.io/UTHSC-package/reference/run_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch the RMSTdesign Shiny Application ‚Äî run_app","text":"","code":"if (FALSE) { # \\dontrun{   run_app() } # }"}]
