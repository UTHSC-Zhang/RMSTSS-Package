% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rmst-dp.R
\name{dp}
\alias{dp}
\title{Function to perform dynamic prediction based on stratified or link models}
\usage{
dp(
  dat,
  datA,
  L,
  K,
  interval,
  method = c("link", "stratified"),
  link = c("linear", "log"),
  stratified = c("add", "multi"),
  weights = c("stabilized", "unstabilized")
)
}
\arguments{
\item{dat}{A data frame containing baseline covariates (\code{Za}, \code{Zb1} to \code{ZbK}),
time-to-event outcome (\code{X}, \code{deltaD}, \code{deltaT}), and \code{entry} time.
Must include \code{ID}.}

\item{datA}{A data frame containing information on treatment assignment times.
Must include \code{ID}, \code{A} (assignment time), and \code{status} ('active' or 'control').}

\item{L}{Numeric, the restriction time for Restricted Mean Survival Time (RMST).}

\item{K}{Integer, the number of cross-sections for dynamic prediction.}

\item{interval}{Numeric, the time interval between consecutive cross-sections.}

\item{method}{Character string, specifying the prediction method: "link" (generalized linear model)
or "stratified" (stratified additive or multiplicative model).}

\item{link}{Character string, used if \code{method = "link"}: "linear" (identity link) or "log" (log link).}

\item{stratified}{Character string, used if \code{method = "stratified"}: "add" (additive model) or "multi" (multiplicative model).}

\item{weights}{Character string, specifying the type of inverse probability weights:
"stabilized" or "unstabilized".}
}
\value{
A list containing:
\item{betahat}{A numeric vector of the estimated model parameters.}
\item{se}{A numeric vector of the standard errors for the estimated parameters.}

A list containing:
\item{betahat}{A numeric vector of the estimated model parameters.}
\item{se}{A numeric vector of the standard errors for the estimated parameters.}
}
\description{
This function implements dynamic prediction models for time-to-event outcomes,
allowing for stratified or link-based approaches. It estimates model parameters
and their standard errors using inverse probability weighting.
}
\examples{
# This example provides a minimal setup for the dp function.
# For power/sample size calculation, refer to `calculate_dp_power` and `calculate_dp_sample_size`.

# Create dummy data
set.seed(123)
n_obs <- 100
df_dat <- data.frame(
  ID = 1:n_obs,
  entry = 0,
  X = rexp(n_obs, rate = 0.1),
  deltaD = rbinom(n_obs, 1, 0.6), # Death indicator
  deltaT = rbinom(n_obs, 1, 0.3), # Treatment indicator
  Za = rbinom(n_obs, 1, 0.5), # Binary covariate (e.g., group)
  Zb1 = rnorm(n_obs),
  Zb2 = rnorm(n_obs),
  Zb3 = rnorm(n_obs)
)
df_dat$X[df_dat$X > 20] <- 20 # Cap follow-up time

df_datA <- data.frame(
  ID = 1:n_obs,
  A = runif(n_obs, 0, 15), # Assignment time
  status = sample(c("active", "control"), n_obs, replace = TRUE)
)

L_val <- 15
K_val <- 3 # Number of cross-sections
interval_val <- L_val / K_val

# Example using "link" method with "linear" link
dp_result_link_linear <- dp(
  dat = df_dat, datA = df_datA, L = L_val, K = K_val,
  interval = interval_val, method = "link", link = "linear",
  weights = "stabilized"
)
# print("DP Result (Link-Linear):")
# print(dp_result_link_linear)

# Example using "stratified" method with "add" (additive)
dp_result_stratified_add <- dp(
  dat = df_dat, datA = df_datA, L = L_val, K = K_val,
  interval = interval_val, method = "stratified", stratified = "add",
  weights = "unstabilized"
)
# print("DP Result (Stratified-Additive):")
# print(dp_result_stratified_add)
Function to perform dynamic prediction based on stratified or link models

This function implements dynamic prediction models for time-to-event outcomes,
allowing for stratified or link-based approaches. It estimates model parameters
and their standard errors using inverse probability weighting.

}
