% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dependent_censoring.R
\name{design_rmst_dependent_censoring}
\alias{design_rmst_dependent_censoring}
\title{Analyze Power/Sample Size for RMST with Dependent Censoring}
\usage{
design_rmst_dependent_censoring(
  pilot_data,
  time_var,
  status_var,
  arm_var,
  dep_cens_status_var,
  sample_sizes = NULL,
  target_powers = NULL,
  linear_terms = NULL,
  tau,
  n_sim = 1000,
  alpha = 0.05,
  parallel.cores = 1,
  patience = 5,
  n_start = 50,
  n_step = 25,
  max_n_per_arm = 2000
)
}
\arguments{
\item{pilot_data}{A data.frame with pilot study data.}

\item{time_var, status_var, arm_var, dep_cens_status_var}{Strings for column names.}

\item{sample_sizes}{Optional vector of sample sizes per arm.}

\item{target_powers}{Optional vector of target powers.}

\item{linear_terms}{Optional vector of covariates for the model. If NULL,
defaults to all other columns in \code{pilot_data}.}

\item{tau}{The truncation time for RMST.}

\item{n_sim}{Number of bootstrap simulations.}

\item{alpha}{The significance level.}

\item{parallel.cores}{Number of cores for parallel processing. Default is 1 (no parallel).}

\item{patience}{Number of consecutive non-improving steps in the sample size
search before terminating that search. Default is 5.}

\item{...}{Additional arguments for sample size search (n_start, n_step, etc.).}
}
\value{
A list containing \code{results_data}, \code{results_plot}, and \code{results_summary}.
}
\description{
Performs power analysis for a two-arm study with a competing risk,
implementing the double IPCW method of Wang & Schaubel (2018).
}
\note{
The primary event in \code{status_var} should be \code{1}/\code{0}. The dependent censoring
event in \code{dep_cens_status_var} should be \code{1}/\code{0}. \code{arm_var} should be \code{1}/\code{0}.
}
\examples{
# Create a small pilot dataset with a competing risk
set.seed(123) # for reproducibility
pilot_data_cr <- data.frame(
  time = rexp(200, rate = 0.1),
  arm = rep(0:1, each = 100),
  age = rnorm(200, 60, 8)
)
event_probs <- runif(200)
pilot_data_cr$status_primary <- ifelse(event_probs < 0.35, 1, 0)
pilot_data_cr$status_competing <- ifelse(event_probs >= 0.35 & event_probs < 0.60, 1, 0)
pilot_data_cr$status_primary[pilot_data_cr$status_competing == 1] <- 0

# --- Power Calculation Example ---
results_power_cr <- design_rmst_dependent_censoring(
  pilot_data = pilot_data_cr,
  time_var = "time",
  status_var = "status_primary",
  dep_cens_status_var = "status_competing",
  arm_var = "arm",
  sample_sizes = c(250),
  tau = 10,
  n_sim = 20 # Low n_sim for example speed
)

\donttest{
# --- Sample Size Calculation with Parallel Processing ---
results_n_cr <- design_rmst_dependent_censoring(
  pilot_data = pilot_data_cr,
  time_var = "time",
  status_var = "status_primary",
  dep_cens_status_var = "status_competing",
  arm_var = "arm",
  target_powers = c(0.80),
  tau = 10,
  n_sim = 100,
  parallel.cores = 2
)
}

}
\references{
Wang, X., & Schaubel, D. E. (2018). \emph{Lifetime Data Analysis}, 24, 176-199.
}
